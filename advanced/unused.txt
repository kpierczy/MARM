/* ------------------------------------------------------------------ */
#if 0
static int eth_init_0_phy( uint16_t phy_addr, uint32_t hclk, uint32_t link_cfg )
{
	if( eth_init_0_no_autonegotiate( phy_addr, hclk ) )
	{
		return ERR_IF;
	}
	if( link_cfg & ETH_AutoNegotiation_Enable )
	{
	  /* We wait for linked status... */
	  {
	    enum { C_timeout = 20 };
	    int to;
		for(to=0; to<C_timeout; ++to )
		{

			if( eth_read_phy_register(phy_addr, PHY_BSR) & PHY_Linked_Status )
				break;
			isix_wait_ms( 100 );
		}
		if( to == C_timeout )
		{
			return ERR_IF;
		}
	  }
	  /* Enable Auto-Negotiation */
	  if(eth_write_phy_register(phy_addr, PHY_BCR, PHY_AutoNegotiation) != ERR_OK)
	  {
	    /* Return ERROR in case of write timeout */
	    return ERR_IF;
	  }
	  /* Wait until the autonegotiation will be completed */
	  {
		  enum { C_timeout = 20 };
		  int to;
		  for(to=0; to<C_timeout; ++to )
		  {

		  	if( eth_read_phy_register(phy_addr, PHY_BSR) & PHY_AutoNego_Complete )
		  		break;
		  	isix_wait_ms( 100 );
		  }
		  if( to == C_timeout )
		  {
		  	return ERR_IF;
		  }
	  }
	  /* Read the result of the autonegotiation */
	  int reg_value = eth_read_phy_register(phy_addr, PHY_SR);

	  /* Configure the MAC with the Duplex Mode fixed by the autonegotiation process */
	  if( reg_value & PHY_Duplex_Status )
	  {
	    /* Set Ethernet duplex mode to FullDuplex following the autonegotiation */
	    link_cfg |= ETH_Mode_FullDuplex;
	  }
	  else
	  {
	    /* Set Ethernet duplex mode to HalfDuplex following the autonegotiation */
		 link_cfg &= ~ETH_Mode_FullDuplex;
	  }
	  /* Configure the MAC with the speed fixed by the autonegotiation process */
	  if(reg_value & PHY_Speed_Status)
	  {
	    /* Set Ethernet speed to 10M following the autonegotiation */
		  link_cfg &= ~ETH_Speed_100M;
	  }
	  else
	  {
	    /* Set Ethernet speed to 100M following the autonegotiation */
		  link_cfg |= ETH_Speed_100M;
	  }
	}
	else
	{
	  if(eth_write_phy_register(phy_addr, PHY_BCR, ((uint16_t)((link_cfg&ETH_Mode_FullDuplex)>> 3) |
	                                                 (uint16_t)((link_cfg&ETH_Speed_100M) >> 1))) != ERR_OK)
	  {
	    /* Return ERROR in case of write timeout */
	    return ERR_IF;
	  }
	  /* Delay to assure PHY configuration */
	  isix_wait_ms( 100 );
	}
	return link_cfg;
}
#endif
